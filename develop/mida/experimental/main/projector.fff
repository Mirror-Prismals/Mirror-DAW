0 #include <iostream>
1 #include <fstream>
2 #include <sstream>
3 #include <vector>
4 #include <string>
5 using Segment = std::pair<int, int>;
6 std::vector<std::string> generateTree(int baseStart, int baseEnd,
7 const std::vector<std::vector<Segment>>& layersConfig) {
8 std::vector<std::string> lines;
9 for (int n = baseStart; n <= baseEnd; ++n) {
10 std::ostringstream line;
11 line << n;
12 for (const auto& layer : layersConfig) {
13 bool segmentFound = false;
14 for (const auto& seg : layer) {
15 int segStart = seg.first;
16 int segEnd = seg.second;
17 if (n >= segStart && n <= segEnd) {
18 line << " " << (n - segStart);
19 segmentFound = true;
20 break; 
21 }
22 }
23 }
24 lines.push_back(line.str());
25 }
26 return lines;
27 }
28 int main() {
29 int baseStart = 0;
30 int baseEnd = 14; 
31 std::vector<std::vector<Segment>> layersConfig;
32 layersConfig.push_back({ {1, 1}, {3, 6}, {8, 13} });  // Layer 1
33 layersConfig.push_back({ {4, 5}, {9, 12} });           // Layer 2
34 layersConfig.push_back({ {11, 11} });                  // Layer 3
35 std::vector<std::string> treeLines = generateTree(baseStart, baseEnd, layersConfig);
36 for (const auto& line : treeLines) {
37 std::cout << line << std::endl;
38 }
39 std::ofstream outFile("tree.txt");
40 if (outFile) {
41 for (const auto& line : treeLines) {
42 outFile << line << "\n";
43 }
44 outFile.close();
45 std::cout << "Map saved to 'tree.txt'." << std::endl;
46 }
47 else {
48 std::cerr << "Error: Could not open file for writing." << std::endl;
49 }
50 return 0;
51 }
