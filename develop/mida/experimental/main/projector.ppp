#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <string>
using Segment = std::pair<int, int>;
std::vector<std::string> generateTree(int baseStart, int baseEnd,
    const std::vector<std::vector<Segment>>& layersConfig) {
    std::vector<std::string> lines;
    for (int n = baseStart; n <= baseEnd; ++n) {
        std::ostringstream line;
        line << n;
        for (const auto& layer : layersConfig) {
            bool segmentFound = false;
            for (const auto& seg : layer) {
                int segStart = seg.first;
                int segEnd = seg.second;
                if (n >= segStart && n <= segEnd) {
                    line << " " << (n - segStart);
                    segmentFound = true;
                    break; 
                }
            }
        }
        lines.push_back(line.str());
    }
    return lines;
}
int main() {
    int baseStart = 0;
    int baseEnd = 14; 
    std::vector<std::vector<Segment>> layersConfig;
    layersConfig.push_back({ {1, 1}, {3, 6}, {8, 13} });  // Layer 1
    layersConfig.push_back({ {4, 5}, {9, 12} });           // Layer 2
    layersConfig.push_back({ {11, 11} });                  // Layer 3
    std::vector<std::string> treeLines = generateTree(baseStart, baseEnd, layersConfig);
    for (const auto& line : treeLines) {
        std::cout << line << std::endl;
    }
    std::ofstream outFile("tree.txt");
    if (outFile) {
        for (const auto& line : treeLines) {
            outFile << line << "\n";
        }
        outFile.close();
        std::cout << "Map saved to 'tree.txt'." << std::endl;
    }
    else {
        std::cerr << "Error: Could not open file for writing." << std::endl;
    }
    return 0;
}
